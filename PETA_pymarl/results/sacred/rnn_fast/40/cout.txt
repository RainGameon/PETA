[INFO 16:35:43] pymarl Running command 'my_main'
[INFO 16:35:43] pymarl Started run with ID "40"
[DEBUG 16:35:43] pymarl Starting Heartbeat
[DEBUG 16:35:43] my_main Started
[INFO 16:35:43] my_main device:cuda:6
[INFO 16:35:43] my_main Experiment Parameters:
[INFO 16:35:43] my_main 

{   'action_selector': 'epsilon_greedy',
    'additional_update': True,
    'adv_hypernet_embed': 64,
    'adv_hypernet_layers': 1,
    'agent': 'rnn_fast',
    'agent_output_type': 'q',
    'atol_memory': 1.3e-05,
    'attend_reg_coef': 0.001,
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_cpu_only': False,
    'buffer_size': 5000,
    'buffer_size_update': 1700,
    'burn_in_period': 32,
    'checkpoint_path': '',
    'config_name': '',
    'critic_lr': 0.0005,
    'curiosity_decay': True,
    'curiosity_decay_cycle': 100000,
    'curiosity_decay_rate': 0.9,
    'curiosity_decay_stop': 0.0,
    'curiosity_scale': 0.001,
    'delta_cover_type': 1,
    'double_q': True,
    'ec_buffer_embedder_update_interval': 10000,
    'ec_buffer_stats_update_interval': 200,
    'emb_out_type': 3,
    'emb_training_batch': 102400,
    'emb_training_mini_batch': 1024,
    'emdqn_buffer_size': 1000000,
    'emdqn_latent_dim': 4,
    'emdqn_loss_weight': 0.1,
    'encoder_type': 1,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': '3s_vs_5z',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_instead_of_state': False,
                    'obs_last_action': False,
                    'obs_own_health': True,
                    'obs_pathing_grid': False,
                    'obs_terrain_height': False,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 728576981,
                    'state_last_action': True,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 50000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'fixed_delta': True,
    'flag_stats_norm': True,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'individual_q_loss_weight': 0.01,
    'is_adv_attention': True,
    'is_batch_rl': False,
    'is_from_start': True,
    'is_minus_one': True,
    'is_prioritized_buffer': True,
    'is_save_buffer': False,
    'is_stop_gradient': True,
    'joint_random_policy_eps': 0.0,
    'label': 'default_label',
    'lambda_kl': 0.0001,
    'lambda_s': 0.1,
    'learner': 'qplex_curiosity_vdn_learner',
    'learner_log_interval': 10000,
    'load_buffer_id': 0,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.0005,
    'mac': 'fast_mac',
    'mask_dead': False,
    'memory_emb_type': 3,
    'mixer': 'dmaq_qatten',
    'mixing_embed_dim': 32,
    'n_head': 4,
    'name': 'EMU_sc2',
    'nonlinear': False,
    'num_circle': 1,
    'num_kernel': 4,
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'optimality_incentive': False,
    'optimality_type': 1,
    'predict2_vdn_target': True,
    'predict_vdn_target': True,
    'predictor_lr': 0.005,
    'prioritized_buffer_alpha': 0.5,
    'repeat_id': 1,
    'rewardnet_embed_size': 128,
    'rewardnet_head': 4,
    'rewardnet_used': True,
    'rewardnet_weight': 0.001,
    'rnn_hidden_dim': 64,
    'rtol_memory': 0.0,
    'runner': 'episode',
    'runner_log_interval': 10000,
    'save_buffer': False,
    'save_buffer_id': 0,
    'save_buffer_interval': 1000,
    'save_buffer_size': 10000,
    'save_memory_info': False,
    'save_model': True,
    'save_model_interval': 1000000,
    'save_replay': False,
    'seed': 728576981,
    'soft_update_tau': 0.005,
    'state_bias': True,
    't_EC_update': 0,
    't_max': 2050000,
    'target_update_interval': 200,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_AEM': True,
    'use_cuda': True,
    'use_double_predict': False,
    'use_emdqn': True,
    'use_individual_Q': False,
    'use_qtotal_td': False,
    'use_tensorboard': True,
    'vdn_soft_update': True,
    'weighted_head': False}

[INFO 16:35:43] my_main saving tb_logs to results/tb_logs/sc2/3s_vs_5z/EMU_sc2__2024-11-02_16-35-43
[INFO 16:35:49] my_main Beginning training for 2050000 timesteps
[INFO 16:35:49] absl No GL library found, so RGB rendering will be disabled. For software rendering install libosmesa.
[INFO 16:35:49] absl Launching SC2: /home/EMC/pymarl/3rdparty/StarCraftII/Versions/Base69232/SC2_x64 -listen 127.0.0.1 -port 43003 -dataDir /home/EMC/pymarl/3rdparty/StarCraftII/ -tempDir /tmp/sc-0sh19zax/ -headlessNoRender
[INFO 16:35:49] absl Connecting to: ws://127.0.0.1:43003/sc2api, attempt: 0, running: True
Version: B69232 (SC2.4.6-Publish)
Build: Oct 23 2018 01:43:04
Command Line: '"/home/EMC/pymarl/3rdparty/StarCraftII/Versions/Base69232/SC2_x64" -listen 127.0.0.1 -port 43003 -dataDir /home/EMC/pymarl/3rdparty/StarCraftII/ -tempDir /tmp/sc-0sh19zax/ -headlessNoRender'
Starting up...
Startup Phase 1 complete
[INFO 16:35:50] absl Connecting to: ws://127.0.0.1:43003/sc2api, attempt: 1, running: True
Startup Phase 2 complete
Creating stub renderer...
Listening on: 127.0.0.1:43003
Startup Phase 3 complete. Ready for commands.
[INFO 16:35:51] absl Connecting to: ws://127.0.0.1:43003/sc2api, attempt: 2, running: True
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Entering load game phase.
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Game has started.
Sending ResponseJoinGame
[INFO 16:35:56] my_main t_env: 44 / 2050000
[INFO 16:35:56] my_main Estimated time left: 24 minutes, 11 seconds. Time passed: 7 seconds
[INFO 16:36:04] my_main Saving models to results/models/_3s_vs_5z/EMU_sc2__2024-11-02_16-35-43/44
SUNMENGYAO____50____________________
cuda 11.1
SUNMENGYAO________________________args.device=cuda:6
SUNMENGYAO_______________runner: k=battle_won v=0
SUNMENGYAO_______________runner: k=n_episodes v=1
SUNMENGYAO_______________runner: k=ep_length v=44
SUNMENGYAO_______________runner: k=battle_won v=0
SUNMENGYAO_______________runner: k=n_episodes v=32
SUNMENGYAO_______________runner: k=ep_length v=1267
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>
prior: episode_sample.type = <class 'components.episode_buffer.EpisodeBatch'>[INFO 16:39:36] my_main Recent Stats | t_env:      10013 | Episode:      198
battle_won_mean:           0.0000	curiosity_decay_cycle:   100000.0000	curiosity_decay_rate:      0.9000	curiosity_decay_stop:      0.0000
curiosity_scale:           0.0010	emdqn_curr_capacity:     1871.0000	emdqn_loss:                0.0000	emdqn_weight:              0.1000
ep_length_mean:           44.0000	epsilon:                   1.0000	grad_norm:                 0.8046	loss:                      0.0438
num_circle:                1.0000	q_taken_mean:              0.1232	return_mean:               3.7825	return_std:                0.0000
target_mean:               0.1632	td_error_abs:              0.1471	test_battle_won_mean:      0.0000	test_ep_length_mean:      39.5938
test_return_mean:          3.2337	test_return_std:           0.1104	vdn extrinsic rewards:     0.0578	vdn grad_norm:             1.0664
vdn hit_prob:              0.4716	vdn intrinsic rewards:     0.0028	vdn loss:                  0.1618	vdn prediction loss:       2.7792
vdn q_taken_mean:          0.0155	vdn target_mean:           0.1145	vdn td_error_abs:          0.3007	
[INFO 16:39:37] my_main t_env: 10046 / 2050000
[INFO 16:39:37] my_main Estimated time left: 12 hours, 31 minutes, 43 seconds. Time passed: 3 minutes, 48 seconds
[INFO 16:39:44] my_main Updated target network
[INFO 16:39:45] my_main Updated target network
